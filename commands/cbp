#!/bin/bash

help() {
  echo "CBP is the full build stage"
  echo "  Login => Checkout => Build => Push"
  echo ""
  echo "Usage:"
  echo "  zpipeline cbp"
  echo ""
  echo "Environment Variables:"
  echo "  PIPELINE_GIT_REGISTRY           - Git registry to use"
  echo "  PIPELINE_GIT_USERNAME           - Git username to use"
  echo "  PIPELINE_GIT_PASSWORD           - Git password to use"
  echo "  PIPELINE_GIT_REPOSITORY   - Git repository to use"
  echo "  PIPELINE_GIT_BRANCH             - Git branch to use"
  echo "  PIPELINE_DOCKER_REGISTRY        - Docker registry to use"
  echo "  PIPELINE_DOCKER_USERNAME        - Docker username to use"
  echo "  PIPELINE_DOCKER_PASSWORD        - Docker password to use"
  echo "  PIPELINE_IMAGE_NAME             - Docker image name to use"
  echo "  PIPELINE_IMAGE_TAGS             - Docker image tags to use"
  # echo "  PIPELINE_BUILD_CONTEXT          - Build context to use"
}

core() {
  if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
    exit 0
  fi

  # Load dot env
  if [ -f "$PWD/.env" ]; then
    log::info "Loading .env ..."
    source $PWD/.env
  fi

  if [ -z "$PIPELINE_GIT_REGISTRY" ]; then
    echo "env PIPELINE_GIT_REGISTRY is required"
    exit 1
  fi

  if [ -z "$PIPELINE_GIT_USERNAME" ]; then
    echo "env PIPELINE_GIT_USERNAME is required"
    exit 1
  fi

  if [ -z "$PIPELINE_GIT_PASSWORD" ]; then
    echo "env PIPELINE_GIT_PASSWORD is required"
    exit 1
  fi

  if [ -z "$PIPELINE_GIT_REPOSITORY" ]; then
    echo "env PIPELINE_GIT_REPOSITORY is required"
    exit 1
  fi

  if [ -z "$PIPELINE_GIT_BRANCH" ]; then
    echo "env PIPELINE_GIT_BRANCH is required"
    exit 1
  fi

  if [ -z "$PIPELINE_DOCKER_REGISTRY" ]; then
    echo "env PIPELINE_DOCKER_REGISTRY is required"
    exit 1
  fi

  if [ -z "$PIPELINE_DOCKER_USERNAME" ]; then
    echo "env PIPELINE_DOCKER_USERNAME is required"
    exit 1
  fi

  if [ -z "$PIPELINE_DOCKER_PASSWORD" ]; then
    echo "env PIPELINE_DOCKER_PASSWORD is required"
    exit 1
  fi

  if [ -z "$PIPELINE_IMAGE_NAME" ]; then
    echo "env PIPELINE_IMAGE_NAME is required"
    exit 1
  fi

  if [ -z "$PIPELINE_IMAGE_TAGS" ]; then
    echo "env PIPELINE_IMAGE_TAGS is required"
    exit 1
  fi

  # if [ -d "$PIPELINE_BUILD_CONTEXT" ]; then
  #   echo "PIPELINE_BUILD_CONTEXT is a directory"
  #   exit 1
  # fi

  set -e

  local build_context="$PLUGIN_PIPELINE_BUILD_CONTEXT"
  if [ -d "$build_context" ]; then
    sudo rm -rf "$build_context"
  fi

  mkdir -p "$build_context"

  local repository_dir="$build_context/repository"
  local log_file="$build_context/log"
  local time_started_at="$build_context/time_started_at"
  local time_finished_at="$build_context/time_finished_at"

  log::info "[pipeline::cbp] started"

  echo "$(date +%s)" >"$time_started_at"

  # @1 git login
  log::info "[pipeline::cbp] git login ..."
  zmicro pipeline login git --registry "${PIPELINE_GIT_REGISTRY}" "${PIPELINE_GIT_USERNAME}" "${PIPELINE_GIT_PASSWORD}" | tee -a $log_file

  # @2 git checkout
  log::info "[pipeline::cbp] git checkout ..."
  zmicro pipeline checkout "${PIPELINE_GIT_REPOSITORY}" "${PIPELINE_GIT_BRANCH}" "${repository_dir}" | tee -a $log_file

  # @3 docker login
  log::info "[pipeline::cbp] docker login ..."
  zmicro pipeline login docker --registry "${PIPELINE_DOCKER_REGISTRY}" "${PIPELINE_DOCKER_USERNAME}" "${PIPELINE_DOCKER_PASSWORD}" | tee -a $log_file

  # @4 docker build
  log::info "[pipeline::cbp] docker build ..."
  zmicro pipeline build --registry "${PIPELINE_DOCKER_REGISTRY}" --tags "${PIPELINE_IMAGE_TAGS}" "${PIPELINE_IMAGE_NAME}" "${repository_dir}" | tee -a $log_file

  # @5 docker push
  log::info "[pipeline::cbp] docker push ..."
  zmicro pipeline push --registry "${PIPELINE_DOCKER_REGISTRY}" --tags "${PIPELINE_IMAGE_TAGS}" "${PIPELINE_IMAGE_NAME}" "${repository_dir}" | tee -a $log_file

  echo "$(date +%s)" >"$time_finished_at"
  log::info "[pipeline::cbp] finished"
}

run() {
  core $@
}

run $@
